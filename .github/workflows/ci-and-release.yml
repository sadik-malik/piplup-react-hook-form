
name: CI & Release

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Enable pnpm via corepack
        run: |
          corepack enable
          corepack prepare pnpm@8 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

  release:
    needs: [lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-


      - name: Enable pnpm via corepack
        run: |
          corepack enable
          corepack prepare pnpm@8 --activate

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: pnpm build

      - name: Release (non-interactive)
        env:
          NODE_ENV: production
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run release -y

      - name: Configure git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit and push version/changelog changes and tags
        run: |
          git add CHANGELOG.md **/package.json
          git commit -m "chore(release): version bump and changelog [skip ci]" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF#refs/heads/}
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
